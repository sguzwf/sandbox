// Generated by LiveScript 1.3.0
var request, id, dimension, appendOnce, append;
request = require('request');
id = 'ckiarss5uv';
dimension = function(id, done){
  return request({
    method: 'GET',
    uri: "https://www.ethercalc.org/_/" + id
  }, function(err, arg$, body){
    var ref$, col, row, tvf;
    if (err) {
      return done(err);
    }
    ref$ = /sheet:c:(\d+):r:(\d+):tvf:(\d+)/g.exec(body), col = ref$[1], row = ref$[2], tvf = ref$[3];
    return done(null, +col, +row);
  });
};
appendOnce = function(id, row, done){
  var options, req, x$;
  options = {
    method: 'POST',
    uri: "https://www.ethercalc.org/_/" + id,
    body: row
  };
  req = request(options, function(err, arg$, body){
    return done(err, !err ? body : void 8);
  });
  x$ = req;
  x$.setHeader({
    'content-type': 'text/csv'
  });
  return x$;
};
append = function(id, row, done){
  var limit, interval, retry;
  limit = 3;
  interval = 1000;
  retry = limit;
  return (function foobar(){
    return dimension(id, function(err, arg$, before){
      return appendOnce(id, row, function(err, command){
        return dimension(id, function(err, arg$, after){
          if (retry--) {
            if (before === after) {
              return setTimeout(foobar, interval);
            } else {
              return done(null, command);
            }
          } else {
            return done(new Error("Fail to append after " + limit + " attempts."));
          }
        });
      });
    });
  }.call(this));
};
append(id, 'fuzz,buzz', function(err, command){
  if (err) {
    throw err;
  }
  return console.log(command);
});
